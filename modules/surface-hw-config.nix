# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

#let
#  unstablePkgs = import <nixos-unstable> {
#    config = config.nixpkgs.config;
#  };
#in
{
  imports =
    [ 
      (modulesPath + "/installer/scan/not-detected.nix")
      # Microsoft Surface Common
      <nixos-hardware/microsoft/surface/common>
    ];

  boot.initrd.availableKernelModules = [ "xhci_pci" "nvme" "uas" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-intel" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/d9d89835-67e5-461d-93f0-e20d0eacbbf9";
      fsType = "ext4";
    };

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/F9B4-EF9B";
      fsType = "vfat";
      options = [ "fmask=0077" "dmask=0077" ];
    };

  swapDevices =
    [ { device = "/dev/disk/by-uuid/ed4238a3-1b24-4861-afc9-6a3044c347f8"; }
    ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  hardware.opengl.enable = true;
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp1s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  #hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
  
  # DPI
  services.xserver.dpi = 96;

  #nixpkgs.config.nvidia.acceptLicense = true;
  #services.xserver.videoDrivers = [ "nvidia" ];
  #hardware.nvidia = {
  #  modesetting.enable = true;
  #  powerManagement.enable = false;
  #  powerManagement.finegrained = false;
  #  open = false;
  #  nvidiaSettings = true;
  #  #package = config.boot.kernelPackages.nvidiaPackages.beta;
  #  package = unstablePkgs.linuxPackages.nvidia_x11;
  #  prime = {
  #    offload = {
  #      enable = true;
  #       enableOffloadCmd = true;
  #    };
  #    intelBusId = "PCI:0:2:0";
  #    nvidiaBusId = "PCI:2:0:0";
  #  };
  #};

}
